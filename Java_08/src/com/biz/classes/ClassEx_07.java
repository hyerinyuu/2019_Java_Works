package com.biz.classes;

import com.biz.classes.model.StudentVO;

public class ClassEx_07 {

	public static void main(String[] args) {

		/*
		 * 기본형 변수, String형 변수 등은
		 * 배열을 선언만 해도 자체적으로 초기화 하는 코드가
		 * 실행되도록 만들어져있다.
		 * 
		 * 하지만 
		 * 사용자가 만든 클래스는 
		 * 배열을 선언한 후에
		 * 반드시 각요소 모두를 초기화 해야만 
		 * 사용, 접근이 가능하다.
		 */
		
		/*
		 * 현재 이 코드는 배열 100 개의 값을 유지할때는 문제가 없다.
		 * 
		 * 하지만 만약 배열의 개수를 변경하려고 할 경우
		 * 배열의 개수인 100이라는 숫자가 중복으로 사용되어 있는 코드를
		 * 모두 변경해 주어야 하기 때문에 자칫 일부 변경되지 않은 코드가
		 * 있을경우 오류가 발생할 가능성이 있다.
		 * 
		 * 이를 방지하기 위해서
		 * 배열의 개수를 변수로 지정하는 방법이 있다.(nLength)
		 */
		
		/*
		 * **********************************************************
		 * [변수를 별도로 사용하지 않고 Java스러운 코드로 변경하는법]
		 * **********************************************************
		 * 
		 * 배열을 선언할때 개수를 지정하는데,
		 * Java 컴파일러는
		 * 배열.length 라는 멤버변수를 하나 생성하고
		 * 값을 배열의 개수로 세팅해 준비해 둔다.
		 * 
		 * 배열.length의 값을 읽으면
		 * 배열의 개수를 알 수 있다.
		 * 
		 * 그래서 for 반복문을 사용할 때 
		 * i < 배열.length 조건분을 사용하면
		 * 자동으로 0 ~ (배열의 개수 -1)까지 반복 실행하는 
		 * 코드를 완성할 수 있다.
		 */
		
		//int nLength = 100;  ==> 배열 개수 변수 삭제
		StudentVO[] stVO = new StudentVO[100];
		
		
		// stVO 배열을 모두 초기화 시키는 코드
		// for 반복문을 사용해서 초기화 하는 코드
		for(int i = 0 ; i < stVO.length; i++) {
			stVO[i] = new StudentVO();
		}
		/*
		 * [사용자 정의형 클래스를 배열로 사용할 때] 
		 * 1. 배열 객체를 선언
		 * 
		 * 2. for 반복문을 사용하여 배열요소를 모두 초기화 한다.
		 * 
		 * 3. 배열요소의 멤버변수나 method에 접근하여
		 * 		처리를 수행한다.
		 */
		
	}

}
